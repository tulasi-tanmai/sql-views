create database Mine;use Mine;-- Create Students tableCREATE TABLE Students (    student_id INT PRIMARY KEY,    student_name VARCHAR(50),    email VARCHAR(50),    major VARCHAR(50),    enrollment_year INT);-- Create Courses tableCREATE TABLE Courses (    course_id INT PRIMARY KEY,    course_name VARCHAR(50),    credit_hours INT,    department VARCHAR(50));-- Create StudentCourses table for enrollmentCREATE TABLE StudentCourses (    enrollment_id INT PRIMARY KEY,    student_id INT,    course_id INT,    semester VARCHAR(20),    grade CHAR(2),    FOREIGN KEY (student_id) REFERENCES Students(student_id),    FOREIGN KEY (course_id) REFERENCES Courses(course_id));-- Insert sample dataINSERT INTO Students VALUES (1, 'John Doe', 'john@example.com', 'Computer Science', 2020),(2, 'Jane Smith', 'jane@example.com', 'Mathematics', 2021),(3, 'Mike Johnson', 'mike@example.com', 'Physics', 2020);INSERT INTO Courses VALUES(101, 'Database Systems', 3, 'CS'),(102, 'Calculus II', 4, 'MATH'),(103, 'Quantum Physics', 4, 'PHYSICS');INSERT INTO StudentCourses VALUES(1, 1, 101, 'Fall 2023', 'A'),(2, 1, 102, 'Spring 2024', 'B'),(3, 2, 102, 'Fall 2023', 'A'),(4, 3, 103, 'Spring 2024', 'B+');select * from Students, Courses, StudentCourses;select * from Students;select * from StudentCourses;----creating viewscreate view  CS_Students asselect student_id,student_name,email from Students where major='Computer Science';select * from CS_Students;--complex view with multiple table with joinscreate view dbo.StudentEnrollments asselect s.student_id,s.student_name,c.course_name,sc.semester,sc.gradefrom dbo.Students s inner join dbo.StudentCourses sc on s.student_id= sc.student_idinner join dbo.Courses c on sc.course_id= c.course_id;update dbo.StudentCourses set grade='c', semester='spring 2024' where student_id=2 and course_id=102;select * from dbo.StudentEnrollments;----  using alter (for adding the columns names)alter view dbo.StudentEnrollments as select s.student_name,c.course_name,sc.semester,sc.grade,c.credit_hoursfrom dbo.Students sInner Join dbo.StudentCourses sc on s.student_id = sc.student_idInner Join dbo.Courses c on sc.course_id = c.course_id;select * from dbo.StudentEnrollments;----create view using update query create view Student as select student_id,student_name from Students;update Student set Student_name='thanusri' where student_id=2;select * from Student;-- join and inner join they are exactly same, so  inner is used for clarity-- query and modify viewselect top 100 * from dbo.CS_Students;select top 3 * from dbo.StudentEnrollments;select * from dbo.StudentEnrollments where grade='A';----updating data through a viewbegin transaction;update dbo.CS_Students set email='thappa@dob.com' where student_id=1;select * from CS_Students;--verifying the update operationselect * from dbo.CS_Students where student_id=1;rollback transaction ---undoing the changes--IRCTC servers, Insteadof doing every small changes in my main system, we have views that works as database--where we can make local changes and later on when they are permanent they are updated in the main Database.--attempting to update complex view using error handling (will fail)begin try begin transaction;update dbo.StudentEnrollments set grade='A' where student_name='John Doe' and course_name='Database Systems';commit transaction;end trybegin catchrollback transaction;print 'Error occured...!!!'+Error_Message();end catch;---Altering a view(mssql  uses create or alter in newer version)--for older version, we need to drop and createif exists( select * from sys.views where name='CS_Students' and schema_ID=schema_ID('dbo'))drop view dbo.CS_Students;--simple viewcreate view dbo.CS_Students_New ASselect student_id,Student_name,email,enrollment_year from dbo.Students where major='Computer Science';select * from dbo.CS_Students_New;--view metadata in ms sql--get view definitionselect OBJECT_DEFINITION(OBJECT_ID('dbo.CS_Students_New')) as ViewDefinition;--list all view in the databaseselect name as ViewName,  modify_Date from sys.views where is_ms_shipped=0 Order by name;